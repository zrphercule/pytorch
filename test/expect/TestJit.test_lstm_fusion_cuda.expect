graph(%0 : Float(3, 10)
      %1 : Float(3, 20)
      %2 : Float(3, 20)
      %3 : Float(80, 10)
      %4 : Float(80, 20)
      %5 : Float(80)
      %6 : Float(80)) {
  %7 : Float(10!, 80!) = aten::t(%3)
  %8 : int = prim::Constant[value=1]()
  %9 : Float(3, 80) = aten::addmm(%5, %0, %7, %8, %8)
  %10 : Float(20!, 80!) = aten::t(%4)
  %11 : Float(3, 80) = aten::addmm(%6, %1, %10, %8, %8)
  %12 : int = prim::Constant[value=4]()
  %13 : Float(3!, 20), %14 : Float(3!, 20), %15 : Float(3!, 20), %16 : Float(3!, 20) = aten::chunk(%9, %12, %8)
  %17 : Float(3!, 20), %18 : Float(3!, 20), %19 : Float(3!, 20), %20 : Float(3!, 20) = aten::chunk(%11, %12, %8)
  %21 : Float(3, 20), %22 : Float(3, 20) = prim::FusionGroup_0[device=0](%2, %16, %20, %15, %19, %14, %18, %13, %17)
  return (%21, %22);
}
with prim::FusionGroup_0 = graph(%13 : Float(3, 20)
      %23 : Float(3!, 20)
      %24 : Float(3!, 20)
      %27 : Float(3!, 20)
      %28 : Float(3!, 20)
      %31 : Float(3!, 20)
      %32 : Float(3!, 20)
      %35 : Float(3!, 20)
      %36 : Float(3!, 20)) {
  %37 : int = prim::Constant[value=1]()
  %38 : Float(3, 20) = aten::add(%35, %36, %37)
  %33 : int = prim::Constant[value=1]()
  %34 : Float(3, 20) = aten::add(%31, %32, %33)
  %29 : int = prim::Constant[value=1]()
  %30 : Float(3, 20) = aten::add(%27, %28, %29)
  %25 : int = prim::Constant[value=1]()
  %26 : Float(3, 20) = aten::add(%23, %24, %25)
  %22 : Float(3, 20) = aten::sigmoid(%38)
  %20 : Float(3, 20) = aten::sigmoid(%34)
  %18 : Float(3, 20) = aten::tanh(%30)
  %16 : Float(3, 20) = aten::sigmoid(%26)
  %14 : Float(3, 20) = aten::mul(%20, %13)
  %11 : Float(3, 20) = aten::mul(%22, %18)
  %7 : int = prim::Constant[value=1]()
  %8 : Float(3, 20) = aten::add(%14, %11, %7)
  %4 : Float(3, 20) = aten::tanh(%8)
  %2 : Float(3, 20) = aten::mul(%16, %4)
  return (%2, %8);
}
