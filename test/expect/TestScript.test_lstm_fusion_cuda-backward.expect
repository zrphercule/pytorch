graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Dynamic
      %3 : Dynamic
      %4 : Dynamic
      %5 : Dynamic
      %6 : Dynamic
      %7 : Dynamic
      %8 : Dynamic
      %9 : Float(*, *)
      %10 : Float(*, *)
      %11 : Float(*, *)
      %12 : Float(*, *)
      %13 : Float(*, *)
      %ingate : Float(*, *)
      %forgetgate : Float(*, *)
      %cellgate : Float(*, *)
      %outgate : Float(*, *)
      %18 : Float(*, *)) {
  %19 : int = prim::Constant[value=1]()
  %20 : Float(*, *), %21 : Float(*, *) = prim::FusionGroup_0[device=0](%ingate, %forgetgate, %cellgate, %outgate, %11, %1, %18, %0)
  %22 : Float(*, *) = aten::mul(%20, %19)
  %23 : Float(*, *) = aten::t(%12)
  %24 : Float(*, *) = aten::mm(%20, %23)
  %25 : Float(*, *) = aten::mul(%24, %19)
  %26 : Float(*, *) = aten::t(%10)
  %27 : Float(*, *) = aten::mm(%26, %20)
  %28 : Float(*, *) = aten::mul(%27, %19)
  %29 : Float(*, *) = aten::t(%13)
  %30 : Float(*, *) = aten::mm(%22, %29)
  %31 : Float(*, *) = aten::t(%9)
  %32 : Float(*, *) = aten::mm(%31, %22)
  %33 : Float(*, *) = aten::t(%32)
  %34 : Float(*, *) = aten::t(%28)
  return (%34, %33, %30, %25, %22, %22, %21);
}
with prim::FusionGroup_0 = graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*, *)
      %5 : Float(*, *)
      %6 : Float(*, *)
      %7 : Float(*, *)) {
  %8 : Float(*, *) = aten::mul(%5, %3)
  %9 : Float(*, *) = aten::mul(%6, %6)
  %10 : Float(*, *) = aten::neg(%9)
  %11 : int = prim::Constant[value=1]()
  %12 : int = prim::Constant[value=1]()
  %13 : Float(*, *) = aten::add(%10, %12, %12)
  %14 : Float(*, *) = aten::mul(%8, %13)
  %15 : int = prim::Constant[value=1]()
  %16 : int = prim::Constant[value=1]()
  %17 : Float(*, *) = aten::add(%7, %14, %16)
  %18 : Float(*, *) = aten::mul(%17, %1)
  %19 : Float(*, *) = aten::mul(%5, %6)
  %20 : int = prim::Constant[value=1]()
  %21 : Float(*, *) = aten::mul(%17, %20)
  %22 : Float(*, *) = aten::mul(%21, %2)
  %23 : Float(*, *) = aten::mul(%21, %0)
  %24 : Float(*, *) = aten::mul(%17, %4)
  %25 : Float(*, *) = aten::neg(%3)
  %26 : int = prim::Constant[value=1]()
  %27 : Float(*, *) = aten::add(%25, %26, %26)
  %28 : Float(*, *) = aten::mul(%19, %3)
  %29 : Float(*, *) = aten::mul(%28, %27)
  %30 : Float(*, *) = aten::mul(%2, %2)
  %31 : Float(*, *) = aten::neg(%30)
  %32 : int = prim::Constant[value=1]()
  %33 : Float(*, *) = aten::add(%31, %32, %32)
  %34 : Float(*, *) = aten::mul(%23, %33)
  %35 : Float(*, *) = aten::neg(%1)
  %36 : int = prim::Constant[value=1]()
  %37 : Float(*, *) = aten::add(%35, %36, %36)
  %38 : Float(*, *) = aten::mul(%24, %1)
  %39 : Float(*, *) = aten::mul(%38, %37)
  %40 : Float(*, *) = aten::neg(%0)
  %41 : int = prim::Constant[value=1]()
  %42 : Float(*, *) = aten::add(%40, %41, %41)
  %43 : Float(*, *) = aten::mul(%22, %0)
  %44 : Float(*, *) = aten::mul(%43, %42)
  %45 : Float(*, *) = prim::FusedConcat[dim=1](%44, %39, %34, %29)
  return (%45, %18);
}
