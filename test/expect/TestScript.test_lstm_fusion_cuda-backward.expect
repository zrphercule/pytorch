graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Undefined
      %3 : Undefined
      %4 : Undefined
      %5 : Undefined
      %6 : Undefined
      %7 : Undefined
      %8 : Undefined
      %9 : Float(*, *)
      %10 : Float(*, *)
      %11 : Float(*, *)
      %12 : Float(*, *)
      %13 : Float(*, *)
      %ingate : Float(*, *)
      %forgetgate : Float(*, *)
      %cellgate : Float(*, *)
      %outgate : Float(*, *)
      %18 : Float(*, *)) {
  %19 : Float(*, *), %20 : Float(*, *) = prim::FusionGroup_0[device=0](%ingate, %forgetgate, %cellgate, %outgate, %11, %1, %18, %0)
  %21 : Float(*, *) = aten::t(%13)
  %22 : Float(*, *) = aten::mm(%19, %21)
  %23 : Float(*, *) = aten::t(%10)
  %24 : Float(*, *) = aten::mm(%23, %19)
  %25 : Float(*, *) = aten::t(%24)
  %26 : Float(*, *) = aten::t(%12)
  %27 : Float(*, *) = aten::mm(%19, %26)
  %28 : Float(*, *) = aten::t(%9)
  %29 : Float(*, *) = aten::mm(%28, %19)
  %30 : Float(*, *) = aten::t(%29)
  return (%30, %27, %25, %22, %19, %19, %20);
}
with prim::FusionGroup_0 = graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*, *)
      %5 : Float(*, *)
      %6 : Float(*, *)
      %7 : Float(*, *)) {
  %8 : Float(*, *) = aten::mul(%5, %3)
  %9 : Float(*, *) = aten::mul(%6, %6)
  %10 : Float(*, *) = aten::neg(%9)
  %11 : int = prim::Constant[value=1]()
  %12 : int = prim::Constant[value=1]()
  %13 : Float(*, *) = aten::add(%10, %12, %12)
  %14 : Float(*, *) = aten::mul(%8, %13)
  %15 : int = prim::Constant[value=1]()
  %16 : int = prim::Constant[value=1]()
  %17 : Float(*, *) = aten::add(%7, %14, %16)
  %18 : Float(*, *) = aten::mul(%17, %1)
  %19 : Float(*, *) = aten::mul(%5, %6)
  %20 : Float(*, *) = aten::mul(%17, %2)
  %21 : Float(*, *) = aten::mul(%17, %0)
  %22 : Float(*, *) = aten::mul(%17, %4)
  %23 : Float(*, *) = aten::neg(%3)
  %24 : int = prim::Constant[value=1]()
  %25 : Float(*, *) = aten::add(%23, %24, %24)
  %26 : Float(*, *) = aten::mul(%25, %3)
  %27 : Float(*, *) = aten::mul(%26, %19)
  %28 : Float(*, *) = aten::mul(%2, %2)
  %29 : Float(*, *) = aten::neg(%28)
  %30 : int = prim::Constant[value=1]()
  %31 : Float(*, *) = aten::add(%29, %30, %30)
  %32 : Float(*, *) = aten::mul(%21, %31)
  %33 : Float(*, *) = aten::neg(%1)
  %34 : int = prim::Constant[value=1]()
  %35 : Float(*, *) = aten::add(%33, %34, %34)
  %36 : Float(*, *) = aten::mul(%35, %1)
  %37 : Float(*, *) = aten::mul(%36, %22)
  %38 : Float(*, *) = aten::neg(%0)
  %39 : int = prim::Constant[value=1]()
  %40 : Float(*, *) = aten::add(%38, %39, %39)
  %41 : Float(*, *) = aten::mul(%40, %0)
  %42 : Float(*, *) = aten::mul(%41, %20)
  %43 : Float(*, *) = prim::FusedConcat[dim=1](%42, %37, %32, %27)
  return (%43, %18);
}
