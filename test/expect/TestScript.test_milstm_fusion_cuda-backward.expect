graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Dynamic
      %3 : Dynamic
      %4 : Dynamic
      %5 : Dynamic
      %6 : Dynamic
      %7 : Dynamic
      %8 : Dynamic
      %9 : Dynamic
      %10 : Dynamic
      %11 : Dynamic
      %12 : Float(*, *)
      %13 : Float(*, *)
      %14 : Float(*)
      %15 : Float(*)
      %16 : Float(*)
      %17 : Float(*, *)
      %18 : Float(*, *)
      %Wx : Float(*, *)
      %20 : Float(*, *)
      %Uz : Float(*, *)
      %22 : Float(*, *)
      %ingate : Float(*, *)
      %forgetgate : Float(*, *)
      %cellgate : Float(*, *)
      %outgate : Float(*, *)
      %27 : Float(*, *)) {
  %28 : Float(*, *) = prim::FusionGroup_0[device=0](%ingate, %forgetgate, %cellgate, %outgate, %17, %0, %27, %1)
  %29 : Float(*, *), %30 : Float(*, *), %31 : Float(*, *), %32 : Float(*, *), %33 : Float(*, *), %34 : Float(*, *) = prim::FusionGroup_1[device=0](%14, %15, %Wx, %28, %Uz, %22, %16)
  %35 : Float(*, *) = aten::t(%13)
  %36 : Float(*, *) = aten::mm(%35, %31)
  %37 : Float(*, *) = aten::t(%36)
  %38 : Float(*, *) = aten::t(%12)
  %39 : Float(*, *) = aten::mm(%38, %29)
  %40 : Float(*, *) = aten::t(%39)
  return (%40, %37, %30, %32, %33, %34);
}
with prim::FusionGroup_0 = graph(%0 : Float(*, *)
      %1 : Float(*, *)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*, *)
      %5 : Float(*, *)
      %6 : Float(*, *)
      %7 : Float(*, *)) {
  %8 : Float(*, *) = aten::mul(%7, %6)
  %9 : Float(*, *) = aten::mul(%7, %3)
  %10 : Float(*, *) = aten::mul(%6, %6)
  %11 : Float(*, *) = aten::neg(%10)
  %12 : int = prim::Constant[value=1]()
  %13 : Float(*, *) = aten::add(%11, %12, %12)
  %14 : Float(*, *) = aten::mul(%9, %13)
  %15 : int = prim::Constant[value=1]()
  %16 : Float(*, *) = aten::add(%5, %14, %15)
  %17 : int = prim::Constant[value=1]()
  %18 : Float(*, *) = aten::mul(%16, %17)
  %19 : Float(*, *) = aten::mul(%18, %2)
  %20 : Float(*, *) = aten::mul(%18, %0)
  %21 : Float(*, *) = aten::mul(%16, %4)
  %22 : Float(*, *) = aten::neg(%3)
  %23 : int = prim::Constant[value=1]()
  %24 : Float(*, *) = aten::add(%22, %23, %23)
  %25 : Float(*, *) = aten::mul(%8, %3)
  %26 : Float(*, *) = aten::mul(%25, %24)
  %27 : Float(*, *) = aten::mul(%2, %2)
  %28 : Float(*, *) = aten::neg(%27)
  %29 : int = prim::Constant[value=1]()
  %30 : Float(*, *) = aten::add(%28, %29, %29)
  %31 : Float(*, *) = aten::mul(%20, %30)
  %32 : Float(*, *) = aten::neg(%1)
  %33 : int = prim::Constant[value=1]()
  %34 : Float(*, *) = aten::add(%32, %33, %33)
  %35 : Float(*, *) = aten::mul(%21, %1)
  %36 : Float(*, *) = aten::mul(%35, %34)
  %37 : Float(*, *) = aten::neg(%0)
  %38 : int = prim::Constant[value=1]()
  %39 : Float(*, *) = aten::add(%37, %38, %38)
  %40 : Float(*, *) = aten::mul(%19, %0)
  %41 : Float(*, *) = aten::mul(%40, %39)
  %42 : Float(*, *) = prim::FusedConcat[dim=1](%41, %36, %31, %26)
  return (%42);
}
with prim::FusionGroup_1 = graph(%0 : Float(*)
      %1 : Float(*)
      %2 : Float(*, *)
      %3 : Float(*, *)
      %4 : Float(*, *)
      %5 : Float(*, *)
      %6 : Float(*)) {
  %7 : int = prim::Constant[value=1]()
  %8 : int = prim::Constant[value=1]()
  %9 : int = prim::Constant[value=1]()
  %10 : int = prim::Constant[value=1]()
  %11 : Float(*, *) = aten::mul(%3, %10)
  %12 : Float(*, *) = aten::mul(%11, %4)
  %13 : Float(*, *) = aten::mul(%11, %2)
  %14 : Float(*, *) = aten::mul(%11, %6)
  %15 : Float(*, *) = aten::mul(%3, %5)
  %16 : int = prim::Constant[value=1]()
  %17 : int = prim::Constant[value=1]()
  %18 : Float(*, *) = aten::add(%14, %15, %17)
  %19 : Float(*, *) = aten::mul(%3, %4)
  %20 : Float(*, *) = aten::mul(%19, %2)
  %21 : Float(*, *) = aten::mul(%11, %1)
  %22 : Float(*, *) = aten::mul(%19, %0)
  %23 : int = prim::Constant[value=1]()
  %24 : Float(*, *) = aten::add(%21, %22, %23)
  return (%24, %20, %18, %13, %12, %11);
}
