graph(%x.1 : Float(3, 10)
      %hx.1 : Float(3, 20)
      %cx.1 : Float(3, 20)
      %w_ih : Float(80, 10)
      %w_hh : Float(80, 20)
      %alpha.1 : Float(80)
      %beta_i.1 : Float(80)
      %beta_h.1 : Float(80)
      %bias : Float(80)) {
  %9 : Float(10!, 80!) = aten::t(%w_ih)
  %Wx.1 : Float(3, 80) = aten::mm(%x.1, %9)
  %11 : Float(20!, 80!) = aten::t(%w_hh)
  %Uz.1 : Float(3, 80) = aten::mm(%hx.1, %11)
  %13 : Float(3, 80) = aten::mul(%alpha.1, %Wx.1)
  %14 : Float(3, 80) = aten::mul(%beta_i.1, %Wx.1)
  %15 : int = prim::Constant[value=1]()
  %16 : Float(3, 80) = aten::mul(%beta_h.1, %Uz.1)
  %17 : Float(3, 80) = prim::FusionGroup_0[device=0](%16, %14, %13, %Uz.1)
  %gates : Float(3, 80) = aten::add(%17, %bias, %15)
  %19 : int = prim::Constant[value=4]()
  %ingate.1 : Float(3!, 20), %forgetgate.1 : Float(3!, 20), %cellgate.1 : Float(3!, 20), %outgate.1 : Float(3!, 20) = aten::chunk(%gates, %19, %15)
  %hy : Float(3, 20), %25 : Float(3, 20), %cy : Float(3, 20), %outgate.2 : Float(3, 20), %cellgate.2 : Float(3, 20), %forgetgate.2 : Float(3, 20), %ingate.2 : Float(3, 20) = prim::FusionGroup_1[device=0](%cx.1, %outgate.1, %cellgate.1, %forgetgate.1, %ingate.1)
  return (%hy, %cy, %9, %Wx.1, %11, %Uz.1, %13, %ingate.2, %forgetgate.2, %cellgate.2, %outgate.2, %25);
}
with prim::FusionGroup_0 = graph(%1 : Float(3, 80)
      %5 : Float(3, 80)
      %8 : Float(3, 80)
      %9 : Float(3, 80)) {
  %10 : Float(3, 80) = aten::mul(%8, %9)
  %6 : int = prim::Constant[value=1]()
  %7 : Float(3, 80) = aten::add(%10, %5, %6)
  %2 : int = prim::Constant[value=1]()
  %3 : Float(3, 80) = aten::add(%7, %1, %2)
  return (%3);
}
with prim::FusionGroup_1 = graph(%13 : Float(3, 20)
      %15 : Float(3!, 20)
      %17 : Float(3!, 20)
      %19 : Float(3!, 20)
      %21 : Float(3!, 20)) {
  %ingate.2 : Float(3, 20) = aten::sigmoid(%21)
  %forgetgate.2 : Float(3, 20) = aten::sigmoid(%19)
  %cellgate.2 : Float(3, 20) = aten::tanh(%17)
  %outgate.2 : Float(3, 20) = aten::sigmoid(%15)
  %14 : Float(3, 20) = aten::mul(%forgetgate.2, %13)
  %11 : Float(3, 20) = aten::mul(%ingate.2, %cellgate.2)
  %7 : int = prim::Constant[value=1]()
  %cy : Float(3, 20) = aten::add(%14, %11, %7)
  %4 : Float(3, 20) = aten::tanh(%cy)
  %hy : Float(3, 20) = aten::mul(%outgate.2, %4)
  return (%hy, %4, %cy, %outgate.2, %cellgate.2, %forgetgate.2, %ingate.2);
}
